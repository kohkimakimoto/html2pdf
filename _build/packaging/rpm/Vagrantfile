# -*- mode: ruby -*-
# vi: set ft=ruby :

product_name = "#{ENV['PRODUCT_NAME']}"
product_version = "#{ENV['PRODUCT_VERSION']}"

Vagrant.configure(2) do |config|

  %w{
    centos-5
    centos-6
    centos-7
  }.each_with_index do |platform, index|
    config.vm.define platform do |c|
      c.vm.box = "kohkimakimoto/#{platform}"
      c.vm.hostname = "go-packaging-machine-#{platform}"
      c.vm.network :private_network, type: "dhcp"
      c.vm.synced_folder __dir__ + "/../../dist", "/var/dist"

      case platform
        when 'centos-5'
          # centos5 does not define 'rhel' macro at default.
          rpm_option = '--define "rhel 5"'
        when 'centos-6'
          rpm_option = ''
        when 'centos-7'
          rpm_option = ''
        else
          raise "Unknown platform: #{platform}"
      end

      c.vm.provision :shell, privileged: false, :inline => <<-EOT
        echo "Provisioning started, installing packages..."

        sudo rpm -qa | grep epel > /dev/null
        if [ $? -ne 0 ]; then
            echo "Install epel repository..."
            sudo yum -y install epel-release
        fi

        sudo rpm -qa | grep rpmdevtools > /dev/null
        if [ $? -ne 0 ]; then
            echo "Setting up rpm dev tree..."
            sudo yum -y install rpmdevtools mock
        fi

        rm -rf $HOME/rpmbuild
        rpmdev-setuptree

        echo "Copying files..."
        cp -pr /vagrant/SPECS $HOME/rpmbuild/
        cp -pr /vagrant/SOURCES $HOME/rpmbuild/
        cp -p  /var/dist/#{product_name}_linux_amd64.zip $HOME/rpmbuild/SOURCES/#{product_name}_linux_amd64.zip

        echo "Building rpm..."
        cd $HOME
        rpmbuild \
            --define "_product_name #{product_name}" \
            --define "_product_version #{product_version}" #{rpm_option} \
            -ba rpmbuild/SPECS/#{product_name}.spec

        echo "Copying rpms back to shared folder..."
        mkdir -p /var/dist/#{platform}
        cp -pr $HOME/rpmbuild/RPMS /var/dist/#{platform}/
        cp -pr $HOME/rpmbuild/SRPMS /var/dist/#{platform}/
      EOT

      c.vm.provider :virtualbox do |vb|
        vb.gui = false
        vb.customize ["modifyvm", :id, "--memory", "2048"]
      end
    end
  end
end
